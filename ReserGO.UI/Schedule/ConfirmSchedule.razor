@using ReserGO.DTO
@using MudBlazor
@using ReserGO.DTO.Extensions;
@if (Booking is object)
{
    <div class="d-flex flex-column justify-content-between w-100 h-100">

        <div class="d-flex flex-row align-items-center w-100 titleSummary" style="height:18%;" ><span>Riepilogo prenotazione</span> </div>
        <div class="d-flex flex-column justify-content-center align-items-center w-100"  style="height:75%">
            <div class="d-flex flex-row justify-content-around align-items-center shadow cardSummary " style="width:70%; height:95%;">

                <div class="d-flex flex-column p-2" style="width:48%; height:95%" >

                    <div class="d-flex w-100 cardTitleSummry">Dettagli</div>
                    <div class="d-flex p-1 dividerTitleSummary" style="width:50%"></div>
                    <div class="d-flex flex-column w-100 h-100 justify-content-around cardSummaryDescription" >
                        <span>NOME: @Booking.User.FirstName</span>
                        <span>COGNOME: @Booking.User.LastName</span>
                        <span>DATA: @GetDate()</span>
                        <span>ORA: @GetTime()</span>
                        <span>PRENOTAZIONE: @Booking.Resource.ResourceName</span>
                        <span>PREZZO: @Booking.Resource.GetTotalPrice()€</span>
                    </div>
                
                </div>
                
                
                <div class="scheduleDivider"></div>


                <div class="d-flex flex-column p-2" style="width:48%; height:95%">
                    <div class="d-flex w-100 cardTitleSummry">Servizi</div>
                    <div class="d-flex p-1 dividerTitleSummary" style="width:50%"></div>
                    <div class="d-flex w-100 h-100 align-items-end">

                        <div class="d-flex flex-column justfy-content-center w-100 cardSummaryService" >
                            <div class="d-flex @(IsSmallView ? "p-2":"p-3")" style="@(IsSmallView ? "height:12vh ":"height:9vh")">
                                <div class="d-flex p-2 shadow align-items-center justify-content-between checkboxCard w-100 h-100">
                                    @if (IsSmallView)
                                    {
                                        <span style="opacity:0.8;" >Servizio</span>
                                        <span style="opacity:0.8;">400€</span>
                                    }
                                    else
                                    {
                                        <span style="opacity:0.8;">Servizio</span>
                                        <span style="opacity:0.8;">400€</span>
                                    }
                                </div>
                            </div>
                     
                        </div>
                    </div>
                </div>

            </div>
            @if (Booking.Resource.RequestToConfirm)
            {
                <div class="d-flex justify-content-center pt-4 w-100 @(IsSmallView ? "infoMailSmall" : "infoMail") ">
                    <span><b>* Ti verrà inviata una mail nel momento della conferma della prenotazione *</b></span>
                </div>
            }
        </div>

        <div class="d-flex justify-content-around align-items-center p-2" style="height:20%">
            <div class="d-flex p-1" style=" @(IsSmallView ? "width:100%" : "width:25%") ">
                <MudButton @onclick="@(() => Submit(false))" class="registerButtonConfirm btn-primary" style="width:100%;" type="submit">Annulla</MudButton>
            </div>
            <div class="d-flex p-1" style="@(IsSmallView ? "width:100%" : "width:25%")">
                <MudButton @onclick="@(() => Submit(true))" class="registerButtonConfirm btn-primary" style="width:100%;" type="submit">Salva</MudButton>
            </div>
        </div>
    </div>
   
}
@code {
    [Parameter]
    public DTOBooking Booking { get; set; }
    [Parameter]
    public EventCallback<bool> OnClick { get; set; }
    [Parameter]
    public bool IsSmallView { get; set; }

    private async Task Submit(bool submit)
    {
        if (OnClick.HasDelegate)
            await OnClick.InvokeAsync(submit);
    }


    public string GetDate()
    {
        return $"{Booking.StartDateTime:yyyy-MM-dd}";
    }
    public string GetTime()
    {
        return $"{Booking.StartDateTime.Hour:D2}:{Booking.StartDateTime.Minute:D2} - {Booking.EndDateTime.Hour:D2}:{Booking.EndDateTime.Minute:D2}";
    }
}
