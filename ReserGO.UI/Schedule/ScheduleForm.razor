@using MudBlazor
@using ReserGO.Miscellaneous.Model
@using ReserGO.UI.FiltersComponent
@using ReserGO.ViewModel.Interface.FiltersComponent
@using ReserGO.ViewModel.Interface.Register
@using ReserGO.DTO
@using ReserGO.Utils.UI
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using ReserGO.ViewModel.Interface.Schedule
@inherits BaseComponentChild<IScheduleFormViewModel, DTOUser>

<div class="d-flex flex-column w-100 h-100">

    <div class="d-flex flex-row justify-content-around columnFormRegister" style="width:100%; height:80%;">

        <MudForm @ref="form" @bind-IsValid="@_success">
            <table style="border-collapse: collapse; width: 100%; border: none;">
                <tr>
                    <td>
                        <div class="inputSpace">
                            <BaseTextField Bind="@((string value) => CurrentViewModel.SelectedItem.FirstName = value)" Label="Nome" Value="@CurrentViewModel.SelectedItem.FirstName" />
                        </div>
                    </td>
                    <td>
                        <div class="inputSpace">
                            <BaseTextField Bind="@((string value) => CurrentViewModel.SelectedItem.LastName = value)" Label="Cognome" Value="@CurrentViewModel.SelectedItem.LastName" />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="inputSpace">
                            <BaseTextField Bind="@((string? value) => CurrentViewModel.SelectedItem.PhoneNumber = value)" Label="Numero di telefono" Regex="^(\d{10}|3\d{9})$" NumericField="true" CustomErrorText="Inserisci un numero valido" Value="@CurrentViewModel.SelectedItem.PhoneNumber" />
                        </div>
                    </td>
                    <td>
                        <div class="inputSpace">
                            <BaseComponent TViewModel="IComuneComboViewModel" TModel="DTOComuneProvincia">
                                <Content>
                                    <MudTextField @bind-Value="@CurrentViewModel.SelectedItem.Email"
                                                  Label="E-mail" Variant="Variant.Outlined" Margin="Margin.Dense"
                                                  Required="true" RequiredError="Inserire Email corretta"
                                                  Immediate="true"
                                                  Validation="@(new EmailAddressAttribute() { ErrorMessage = "L'email non è valida'" })">
                                    </MudTextField>
                                </Content>
                            </BaseComponent>
                        </div>
                    </td>
                </tr>
            </table>
        </MudForm>

    </div>

    <div class="d-flex flex-row justify-content-center columnFormRegister" style="width:100%; height:30%">
        <MudButton class="registerButton btn-primary" Disabled="@(!_success)" style="width:15vw;height:10vh;" type="submit" OnClick="Click">Salva</MudButton>
    </div>
</div>

@code {

    [Parameter]
    public EventCallback<DTOUser> Callback { get; set; }
    private bool _success;
    MudForm form;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!String.IsNullOrEmpty(CurrentViewModel.SelectedItem.FirstName))
        {
            form.Validate();
            _success = form.IsValid;
        }
    }


    private async Task Click()
    {
        if (Callback.HasDelegate)
        {
            await Callback.InvokeAsync(CurrentViewModel.SelectedItem);
        }
    }


}


<style>
    .registerDialogCss {
        width: 50vw;
        height: 55vh;
        max-width: 50vw !important;
        border-radius: 30px !important;
    }

    .mud-input > input.mud-input-root-outlined.mud-input-root-adorned-end, div.mud-input-slot.mud-input-root-outlined.mud-input-root-adorned-end {
        padding: 10px !important;
    }

    .mud-form {
        flex-direction: unset !important;
    }

    td {
        padding: 9px;
        margin-bottom: 15px;
    }

    .inputSpace {
        height: 45px;
    }

    .mud-form {
        width: 100% !important;
    }
</style>
