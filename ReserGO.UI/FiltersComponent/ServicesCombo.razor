@using MudBlazor
@using System.Collections.Generic
@using System.Threading
@using System.Threading.Tasks
@using ReserGO.Miscellaneous.Model
@using ReserGO.Utils.UI
@using ReserGO.ViewModel.Interface.FiltersComponent
@using ReserGO.ViewModel.ViewModel.FiltersComponent
@using ReserGO.DTO
@inherits BaseComponentChild<IServicesComboViewModel, DTOService>

<MudSelect T="string" Label="Servizi" Variant="Variant.Text" Class="w-100 h-100" HelperText="@(CurrentViewModel.IsLoading ? "Loading..." : "Scegli i servizi da associare alla risorsa")" MultiSelection="true" @bind-SelectedValues="CurrentViewModel.ServicesChecked" Disabled="CurrentViewModel.IsLoading">
    @foreach (var service in CurrentViewModel.List)
    {
        <MudSelectItem T="string" Value="@service.ServiceName">@service.ServiceName</MudSelectItem>
    }
</MudSelect>


@code {

    [Parameter]
    public EventCallback<List<DTOService>> Callback { get; set; }
    [Parameter]
    public List<DTOService> SelectedServices { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        CurrentViewModel.Callback = Callback;
        if(SelectedServices!=null)
            CurrentViewModel.SelectedServices = SelectedServices;
    }

    protected override async Task OnInitializedAsync()
    {
        CurrentViewModel.IsFirstLoad = true;
        await CurrentViewModel.GetServices();
    }
}
