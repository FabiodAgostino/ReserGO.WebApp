@using MudBlazor
@using ReserGO.Utils.DTO.Utils;
<MudDialog Options="@Options">
    <TitleContent>
        <div class="d-flex justify-content-between align-items-center w-100 titleContentConfirmValidate">
            <b>Elimina prenotazione</b>
            <MudIconButton Icon="@Icons.Material.Filled.Clear" Color="Color.Default" OnClick="() => Close(false)" />
        </div>
    </TitleContent>
    <DialogContent>
        <div class="d-flex flex-column justify-content-center p-5" style="text-align:center">
            <b>Attenzione, stai per eliminare questa prenotazione.</b><br />
            Eliminata la prenotazione verrà inviata una mail all'utente che ha inoltrato la richiesta e non sarà più possibile visualizzarla. 
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Default" Variant="Variant.Filled" OnClick="() => Close(false)">Chiudi</MudButton>
        <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="() => Close(true)">Elimina</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public EventCallback<bool> Callback { get; set; }
    public DialogOptions Options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            MaxWidth = MaxWidth.Large,
            NoHeader = true,

        };
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    public async Task Close(bool value)
    {
        if (Callback.HasDelegate && value)
            await Callback.InvokeAsync(value);
        MudDialog.Close();
    }
}

<style>
    .titleContentConfirmValidate {
        background: #0066FF;
        color: white;
        padding: 15px;
    }

    .mud-dialog .mud-dialog-title {
        padding: 0 !important;
    }

    .mud-dialog .mud-dialog-actions {
        justify-content: space-around !important;
    }
</style>
