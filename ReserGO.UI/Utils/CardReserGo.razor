@using MudBlazor
@using ReserGO.Service.Interface.Service;
@inject ITranslateService t

<div class="d-flex flex-column shadow @(ZoomEffect ? "cardAction":"cardActionNoZoom")" @onclick="@(()=> Click())" style="@CardStyle">
    <div class="d-flex justify-content-center align-items-center @(ZoomEffect ? "cardHeader":"cardHeaderNoEffect")" style="background-color:#0066FF;" >
        @if(Icon.Length > 1)
        {
            <MudIcon Icon="@Icon" Class="@(IsSmallView ? "smallIconCardReserGoCss":"iconCardReserGoCss")" />
        }
        @if (Title.Length > 1)
        {
            if(Vertical)
            {
                <span class="text" style="padding-inline: 0.5vw; font-size: 1.3vw;" title="@Title">@(t.TruncateText(Title, 50))</span>
            }
            else
            {
                <span class="text" style="padding-inline:1vw; @(IsSmallView ? "font-size:x-large;":"font-size:2vw;")">@Title</span>
            }
        }
    </div>
    <div class="d-flex align-items-center @(IsSmallView ? "cardBodyReserGoSmall":"cardBodyReserGo")" style="@BodyStyle">
        @if(String.IsNullOrEmpty(Image))
        {
            <img src="@Image" />
        }
        @if (IsSmallView)
        {
            <span title="@Description" >
                @(t.TruncateText(Description, 70))
            </span>
        }
        else
        {
            <span title="@Description" >
                @(t.TruncateText(Description, 100))
            </span>
        }
    </div>
</div>

@code {

    [Parameter]
    public EventCallback Callback { get; set; }

    [Parameter]
    public string Title { get; set; } = "Titolo";

    [Parameter]
    public string Image { get; set; }

    [Parameter]
    public string Description { get; set; } = "Descrizione...";

    [Parameter]
    public string Icon { get; set; } = "";

    [Parameter]
    public string? CardStyle { get; set; } = "";

    [Parameter]
    public string? BodyStyle { get; set; } = "";

    [Parameter]
    public bool IsSmallView { get; set; }

    [Parameter]
    public bool Vertical { get; set; }
    [Parameter]
    public bool ZoomEffect { get; set; } = true;

    protected override void OnInitialized(){
    }

    private async Task Click()
    {
        if (Callback.HasDelegate)
        {
            await Callback.InvokeAsync();
        }
    }
}

<style>
    .iconCardReserGoCss{
        color:white;
        font-size:2.5vw !important;
    }

    .smallIconCardReserGoCss {
        color: white;
        font-size: 26px !important;
    }
</style>
